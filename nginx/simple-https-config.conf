# WebSockets helper map, see http://nginx.org/en/docs/http/websocket.html -- for cutting-edge applications
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen   80;
    server_name server_name1 server_name;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443;
    ssl                     on;
    ssl_certificate         /etc/nginx/ssl/file.crt;
    ssl_certificate_key     /etc/nginx/ssl/file.key;

    server_name server_name1 server_name;

    # share static via nginx
    location /static {
        # autoindex on;  # for indexing of files
        alias /var/www/site1/ui/static;
        gzip on;
        gzip_min_length  1000;
        gzip_static on;
        expires 1y;
    }

    location / {
        proxy_pass_header Server;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_connect_timeout 10;
        proxy_read_timeout 60;
        proxy_pass http://127.0.0.1:8000/;
        gzip on;
        gzip_min_length  1000;

        # set header for django secure handler to prevent redirect troubles
        proxy_set_header X-Forwarded-Protocol $scheme;
    }

    # for socketio signals if you make cutting-edge web application
    location /socket.io/ {
        tcp_nodelay on;
        proxy_pass http://localhost:1111;
        proxy_connect_timeout 30;
        proxy_read_timeout 10d;
        proxy_send_timeout 10d;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    # stubs for backend errors
    error_page   500 502 503 504 /maintenance.html;
    location = /maintenance.html {
        root   /var/www/site1/templates;
    }
}
